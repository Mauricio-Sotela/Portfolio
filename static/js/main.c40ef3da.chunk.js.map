{"version":3,"sources":["components/Button.js","components/Skils.js","App.js","index.js"],"names":["Button","props","useState","bgColor","setbgColor","textColor","settextColor","className","target","rel","href","to","style","backgroundColor","color","onMouseOver","hoverColor","onMouseLeave","title","Skill","items","data","card","map","item","key","id","icon","description","technology","technologies_items","tools","tools_items","Fragment","App","updateTaskInputValue","e","setState","newTaskItem","value","toggleTask","task","tasks","state","t","name","done","createNewTask","find","render","Data","username","showCompleted","Component","ReactDOM","document","getElementById"],"mappings":"+OAEe,SAASA,EAAOC,GAAQ,IAAD,EACNC,mBAASD,EAAME,SADT,mBAC7BA,EAD6B,KACpBC,EADoB,OAEFF,mBAASD,EAAMI,WAFb,mBAE7BA,EAF6B,KAElBC,EAFkB,KAcpC,OACE,uBACEC,UAAU,cACVC,OAAO,SACPC,IAAI,sBACJC,KAAMT,EAAMU,IAEZ,4BACEJ,UAAU,gBACVK,MAAO,CAAEC,gBAAiBV,EAASW,MAAOT,GAC1CU,YAAa,kBAjBjBX,EAAWH,EAAMe,iBACjBV,EAAaL,EAAME,UAiBfc,aAAc,kBAdlBb,EAAWH,EAAME,cACjBG,EAAaL,EAAMI,aASjB,UAMUJ,EAAMiB,Q,WC3BP,SAASC,EAAMlB,GAC5B,IAAMmB,EAAQnB,EAAMoB,KAAKC,KAAKC,KAAI,SAACC,GACjC,OACE,yBAAKjB,UAAU,OAAOkB,IAAKD,EAAKE,IAC9B,yBAAKnB,UAAU,aAAa,uBAAGA,UAAWiB,EAAKG,QAC/C,4BAAQpB,UAAU,cAAciB,EAAKN,OACrC,uBAAGX,UAAU,oBAAoBiB,EAAKI,aACtC,4BAAQrB,UAAU,2BAA2BiB,EAAKK,YAClD,uBAAGtB,UAAU,qBACViB,EAAKM,mBAAmBP,KAAI,SAACC,GAC5B,OAAO,4BAAKA,OAGhB,4BAAQjB,UAAU,oBAAoBiB,EAAKO,OAC3C,uBAAGxB,UAAU,cACViB,EAAKQ,YAAYT,KAAI,SAACC,GACrB,OAAO,4BAAKA,WAOtB,OACE,kBAAC,IAAMS,SAAP,KACE,yBAAK1B,UAAU,kBAAkBa,I,ICvBlBc,E,kDACnB,WAAYjC,GAAQ,IAAD,8BACjB,cAAMA,IAQRkC,qBAAuB,SAACC,GACtB,EAAKC,SAAS,CAAEC,YAAaF,EAAE5B,OAAO+B,SAVrB,EAanBC,WAAa,SAACC,GAAD,OACX,EAAKJ,SAAS,CACZK,MAAO,EAAKC,MAAMD,MAAMnB,KAAI,SAACqB,GAAD,OAC1BA,EAAEC,OAASJ,EAAKI,KAAhB,2BAA4BD,GAA5B,IAA+BE,MAAOF,EAAEE,OAASF,QAhBpC,EAoBnBG,cAAgB,SAACN,GACV,EAAKE,MAAMD,MAAMM,MAAK,SAACJ,GAAD,OAAOA,EAAEC,OAASJ,MAC3C,EAAKJ,SACH,CACEK,MAAM,GAAD,mBAAM,EAAKC,MAAMD,OAAjB,CAAwB,CAAEG,KAAMJ,EAAMK,MAAM,QAxBtC,EAgCnBG,OAAS,kBAEP,6BAEE,kBAACjD,EAAD,CACEkB,MAAM,WACNf,QAAQ,QACRa,WAAW,QACXX,UAAU,QACVM,GAAG,uCAGL,kBAACQ,EAAD,CAAOE,KAAM6B,MA1Cf,EAAKP,MAAQ,CACXQ,SAAU,WACVT,MAAO,GACPU,eAAe,GALA,E,UADYC,a,YCEjCC,IAASL,OAAO,kBAAC,EAAD,MAASM,SAASC,eAAe,U","file":"static/js/main.c40ef3da.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function Button(props) {\n  const [bgColor, setbgColor] = useState(props.bgColor);\n  const [textColor, settextColor] = useState(props.textColor);\n\n\n\n  const over = () => {\n    setbgColor(props.hoverColor);\n    settextColor(props.bgColor);\n  };\n  const leave = () => {\n    setbgColor(props.bgColor);\n    settextColor(props.textColor);\n  };\n  return (\n    <a\n      className=\"custom-link\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      href={props.to}\n    >\n      <button\n        className=\"custom-button\"\n        style={{ backgroundColor: bgColor, color: textColor }}\n        onMouseOver={() => over()}\n        onMouseLeave={() => leave()}\n      >\n        Hello, {props.title}\n      </button>\n    </a>\n  );\n}\n","import React from \"react\";\n\nexport default function Skill(props) {\n  const items = props.data.card.map((item) => {\n    return (\n      <div className=\"card\" key={item.id}>\n        <div className=\"card_icon\">{<i className={item.icon}></i>}</div>\n        <strong className=\"card_title\">{item.title}</strong>\n        <p className=\"card_description\">{item.description}</p>\n        <strong className=\"card_technologies_title\">{item.technology}</strong>\n        <p className=\"card_technologies\">\n          {item.technologies_items.map((item) => {\n            return <li>{item}</li>;\n          })}\n        </p>\n        <strong className=\"card_tools_title\">{item.tools}</strong>\n        <p className=\"card_tools\">\n          {item.tools_items.map((item) => {\n            return <li>{item}</li>;\n          })}\n        </p>\n      </div>\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <div className=\"card_container\">{items}</div>\n    </React.Fragment>\n  );\n}\n","import React, { Component } from \"react\";\nimport Button from \"./components/Button\";\nimport Data from \"./data.json\";\nimport Skill from \"./components/Skils\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"Mauricio\",\n      tasks: [],\n      showCompleted: true,\n    };\n  }\n\n  updateTaskInputValue = (e) => {\n    this.setState({ newTaskItem: e.target.value });\n  };\n\n  toggleTask = (task) =>\n    this.setState({\n      tasks: this.state.tasks.map((t) =>\n        t.name === task.name ? { ...t, done: !t.done } : t\n      ),\n    });\n\n  createNewTask = (task) => {\n    if (!this.state.tasks.find((t) => t.name === task)) {\n      this.setState(\n        {\n          tasks: [...this.state.tasks, { name: task, done: false }],\n        }\n        // () => localStorage.setItem(\"tasks\", JSON.stringify(this.state))\n      );\n    }\n  };\n \n\n  render = () => (\n    \n    <div>\n      \n      <Button \n        title=\"mauricio\"\n        bgColor=\"white\"\n        hoverColor=\"black\"\n        textColor=\"black\"\n        to=\"https://github.com/Mauricio-Sotela\"\n      />\n\n      <Skill data={Data}/>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootswatch/dist/pulse/bootstrap.min.css';\nimport \"../src/scss/main.scss\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}